# =============================================================================
# BUILDER
# =============================================================================

FROM docker.io/python:3.9-slim-bullseye as builder

# create and set working directory
WORKDIR /keeper

# set environment variables
ENV PIP_DISABLE_PIP_VERSION_CHECK=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# install system dependencies
RUN apt-get update && apt-get install -y \
    python3-dev \
    build-essential \
    libpq-dev \
    netcat \
    libmagic-dev

# install python dependencies
COPY requirements/ /keeper/requirements/
RUN pip install --upgrade pip && pip install -r requirements/prod.txt


# =============================================================================
# FINAL
# =============================================================================

FROM docker.io/python:3.9-slim-bullseye

# create directory for the app user
RUN mkdir -p /home/keeper

# create the app user
RUN groupadd keeper && useradd -g keeper keeper

# create directories and set environment variables
ENV HOME=/home/keeper
ENV APP_HOME=/keeper
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# create location for uwsgi socket
RUN mkdir -p /tmp/uwsgi

# install system dependencies
RUN apt-get update && apt-get install -y \
    python3-dev \
    build-essential \
    libpq-dev \
    netcat \
    libmagic-dev \
    uwsgi \
    uwsgi-plugin-python3

# install python dependencies
COPY requirements/ $APP_HOME/requirements/
RUN pip install --upgrade pip && pip install -r requirements/prod.txt

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g' $APP_HOME/entrypoint.prod.sh
RUN chmod +x $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R keeper:keeper $APP_HOME

# change to the app user
USER keeper

# run entrypoint.sh
ENTRYPOINT ["/keeper/entrypoint.prod.sh"]

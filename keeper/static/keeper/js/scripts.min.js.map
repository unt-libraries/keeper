{"version":3,"sources":["scripts.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","scrollToElementTop","$element","$","animate","scrollTop","offset","top","duration","enableFormButtons","removeAttr","disableFormButtons","attr","showProgressBars","removeClass","hideProgressBars","addClass","formSuccess","files","response","$formContainer","html","template","disableFormFields","enableFormFields","formErrors","errorsForm","errorsFile","console","log","error","append","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_error","value","file_name","file","err","displayParsleyError","fieldInstance","messages","getErrorsMessages","context","id","document","querySelector","style","display","siblings","tooltip","animation","container","placement","title","trigger","closest","removeParsleyError","Dropzone","autoDiscover","previewTemplateNode","previewTemplate","remove","parsleyForm","parsley","extend","options","errorsContainer","parsleyField","errorsWrapper","window","Parsley","on","paramName","autoProcessQueue","parallelUploads","createImageThumbnails","thumbnailWidth","maxFiles","maxFilesize","uploadMultiple","clickable","previewsContainer","acceptedFiles","acceptedFileTypes","accept","size","previewElement","getElementsByClassName","init","$submitButton","$removeAllButton","myDropzone","this","preventDefault","stopPropagation","validate","processQueue","removeAllFiles","type","slice","imgElement","getElementsByTagName","imgParent","parentNode","mimeType","split","newNode","createElement","inArray","Object","keys","className","replaceChild","progress","$progressBar","width","text","parseInt","success","forEach"],"mappings":"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","file":"scripts.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n// Initialize and configure Dropzone\nDropzone.autoDiscover = false;\n\n// Assign Dropzone preview template and delete from DOM so it isn't submitted\nvar previewTemplateNode = $('#previewTemplate');\nvar previewTemplate = previewTemplateNode.html();\npreviewTemplateNode.remove();\n\n// Initialize Parsley and attach to form\nvar parsleyForm = $('#dropzoneUpload').parsley();\n\n// Override Parsley options\n$.extend(parsleyForm.options, {\n    errorsContainer: function errorsContainer(parsleyField) {\n        return parsleyField.$element.siblings('.form-control-feedback').attr('title');\n    },\n\n    errorsWrapper: false\n});\n\nfunction scrollToElementTop($element) {\n    $('html, body').animate({\n        scrollTop: $element.offset().top\n    }, {\n        duration: 1000\n    });\n}\n\nfunction enableFormButtons() {\n    $('#submitButton').removeAttr('disabled');\n    $('#removeAllButton').removeAttr('disabled');\n}\n\nfunction disableFormButtons() {\n    $('#submitButton').attr('disabled', 'disabled');\n    $('#removeAllButton').attr('disabled', 'disabled');\n}\n\nfunction showProgressBars() {\n    $('.file-progress').removeClass('file-progress--hidden');\n    $('#totalProgressBar').removeClass('dropzone-form__upload-progress--hidden');\n}\n\nfunction hideProgressBars() {\n    $('.file-progress').addClass('file-progress--hidden');\n    $('#totalProgressBar').addClass('dropzone-form__upload-progress--hidden');\n}\n\n// Called by myDropzone after successful response from server\nfunction formSuccess(files, response) {\n    var $formContainer = $('#formContainer');\n\n    $formContainer.html(response.template);\n    scrollToElementTop($formContainer);\n}\n\nfunction disableFormFields() {\n    $('fieldset').attr('disabled', 'disabled');\n    $('textarea[name=file-file_description]').attr('disabled', 'disabled');\n    $('.dropzone-template__remove-button').addClass('hidden');\n    $('.dropzone-form').addClass('hidden');\n}\n\nfunction enableFormFields() {\n    $('fieldset').removeAttr('disabled');\n    $('textarea[name=file-file_description]').removeAttr('disabled');\n    $('.dropzone-template__remove-button').removeClass('hidden');\n    $('.dropzone-form').removeClass('hidden');\n}\n\n// Called by myDropzone after Dropzone successmultiple, but error from server\nfunction formErrors(response) {\n    hideProgressBars();\n    var errorsForm = response.errorsForm;\n    var errorsFile = response.errorsFile;\n\n    console.log(errorsForm);\n    console.log(errorsFile);\n\n    // Display server side form errors\n    for (var error in errorsForm) {\n        $('#dropzoneFormError').append('<div class=\"alert alert-danger alert-dismissible\" role=\"alert\">' + '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">' + '<span aria-hidden=\"true\">&times;</span></button>' + '<strong class=\"error\">' + 'Error in field ' + error + ': ' + errorsForm[error] + '</strong>' + '</div>');\n    }\n\n    // Display server side file errors\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = errorsFile[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _error = _step.value;\n\n            $('#dropzoneFormError').append('<div class=\"alert alert-danger alert-dismissible\" role=\"alert\">' + '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">' + '<span aria-hidden=\"true\">&times;</span></button>' + '<strong class=\"error\">' + 'Error in file ' + _error.file_name + ': ' + _error.error.file + '</strong>' + '</div>');\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    enableFormFields();\n    scrollToElementTop($('#dropzoneFormError'));\n}\n\n// add tooltips and error classes on parsley field errors. Accepts parsleyFieldInstance\nfunction displayParsleyError(fieldInstance) {\n    var messages = fieldInstance.getErrorsMessages();\n\n    if (fieldInstance.$element.context.id === 'g-recaptcha-response') {\n        document.querySelector('#grecaptcha-required').style.display = '';\n    } else {\n        fieldInstance.$element.siblings('[data-toggle=\"tooltip\"]').removeClass('fa fa-check').addClass('fa fa-times').tooltip('destroy').tooltip({\n            animation: false,\n            container: 'body',\n            placement: 'top',\n            title: messages,\n            trigger: 'manual'\n        }).tooltip('show').closest('.form-group').removeClass('has-success').addClass('has-error');\n    }\n}\n\n// destroy tooltips and add success classes on parsley field success\nfunction removeParsleyError(fieldInstance) {\n    if (fieldInstance.$element.context.id === 'g-recaptcha-response') {\n        document.querySelector('#grecaptcha-required').style.display = 'none';\n    } else {\n        fieldInstance.$element.siblings('[data-toggle=\"tooltip\"]').removeClass('fa fa-times').addClass('fa fa-check').tooltip('destroy').closest('.form-group').removeClass('has-error').addClass('has-success');\n    }\n}\n\n// bind Parsley field errors to displayParsleyError()\nwindow.Parsley.on('field:error', function (fieldInstance) {\n    displayParsleyError(fieldInstance);\n});\n\n// bind Parsley field success to removeParsleyError()\nwindow.Parsley.on('field:success', function (fieldInstance) {\n    removeParsleyError(fieldInstance);\n});\n\n// Add form validation data not provided by Django\n$('#id_accession-phone_number').attr('type', 'tel').attr('data-parsley-group', 'phone').attr('data-parsley-minlength', '10');\n\n// Bind Dropzone to form element and configure\nvar myDropzone = new Dropzone('#dropzoneUpload', {\n    paramName: function paramName() {\n        return 'file-file';\n    },\n\n    autoProcessQueue: false,\n    parallelUploads: 100, // parallelUploads must equal maxFiles or separate requests are needed\n    createImageThumbnails: true,\n    // thumbnailHeight: 200,\n    thumbnailWidth: 200,\n    maxFiles: 100,\n    maxFilesize: 4000,\n    uploadMultiple: true,\n    clickable: '#dropzoneClickable',\n    previewsContainer: '#dropzonePreviews',\n    previewTemplate: previewTemplate,\n    acceptedFiles: window.acceptedFileTypes,\n    accept: function accept(file, done) {\n        // Display error on add if file is smaller than 1024 bytes\n        if (file.size < 1024) {\n            file.previewElement.getElementsByClassName('error')[0].style.display = 'block';\n            done(\"The file's size is too small. It will not be uploaded.\");\n        } else {\n            done();\n        }\n    },\n    init: function init() {\n        var $submitButton = $('#submitButton');\n        var $removeAllButton = $('#removeAllButton');\n        var myDropzone = this;\n\n        $submitButton.on('click', function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            // Only process queue if the form passes Parsley validation\n            if (parsleyForm.validate()) {\n                myDropzone.processQueue();\n            }\n        });\n\n        $removeAllButton.on('click', function () {\n            myDropzone.removeAllFiles(true);\n            scrollToElementTop($('#formContainer'));\n        });\n\n        // Behavior for drag/hover file over dropzone form\n        this.on('dragover', function () {\n            $('#formContainer').addClass('dropzone-form__drag-hover');\n        });\n        this.on('dragleave', function () {\n            $('#formContainer').removeClass('dropzone-form__drag-hover');\n        });\n        this.on('dragend', function () {\n            $('#formContainer').removeClass('dropzone-form__drag-hover');\n        });\n        this.on('drop', function () {\n            $('#formContainer').removeClass('dropzone-form__drag-hover');\n        });\n\n        // Fires when a file is added to the upload list\n        this.on('addedfile', function (file) {\n            // DOM manipulation for added file\n            enableFormButtons();\n\n            // Look up the file mime type for non-images to find an icon to display,\n            // replacing the img element\n            if (file.type.slice(0, 5) !== 'image') {\n                var imgElement = file.previewElement.getElementsByTagName('img')[0];\n                var imgParent = imgElement.parentNode;\n                var mimeType = file.type.split('/')[0];\n                var newNode = document.createElement('i');\n\n                if ($.inArray(file.type, Object.keys(acceptedFiles)) > -1) {\n                    newNode.className = 'fa fa-' + acceptedFiles[file.type] + ' fa-5x';\n                } else if ($.inArray(mimeType + '/*', Object.keys(acceptedFiles)) > -1) {\n                    newNode.className = 'fa fa-' + acceptedFiles[mimeType + '/*'] + ' fa-5x';\n                } else {\n                    newNode.className = 'fa fa-file-o fa-5x';\n                }\n                imgParent.replaceChild(newNode, imgElement);\n            }\n        });\n\n        // Updates the total upload progress bar\n        this.on('totaluploadprogress', function (progress) {\n            var $progressBar = $('#total-progress');\n            $progressBar.width(progress + '%');\n            if (progress === 100) {\n                $progressBar.text('Processing');\n            } else {\n                $progressBar.text(parseInt(progress, 10) + '%');\n            }\n        });\n\n        // Fires when all files are removed from upload list\n        this.on('reset', function () {\n            disableFormButtons();\n            hideProgressBars();\n        });\n\n        // Fires when form is submitted and files are being uploaded\n        this.on('sendingmultiple', function () {\n            disableFormFields();\n            showProgressBars();\n            scrollToElementTop($('#formContainer'));\n        });\n\n        // Fires after successful file upload / form submission\n        this.on('successmultiple', function (files, response) {\n            if (response.success) {\n                formSuccess(files, response);\n            } else {\n                formErrors(response);\n            }\n        });\n\n        // Fires on Dropzone upload errors\n        this.on('errormultiple', function (files) {\n            files.forEach(function (file) {\n                file.previewElement.getElementsByClassName('error')[0].style.display = 'block';\n            });\n        });\n    }\n});\n\n},{}]},{},[1]);\n"]}